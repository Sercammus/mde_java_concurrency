module xpand.example.Generator

import org.eclipse.emf.mwe.utils.Reader
import org.eclipse.emf.mwe.utils.StandaloneSetup
import org.eclipse.emf.mwe.utils.DirectoryCleaner
import org.eclipse.xtend.typesystem.emf.EmfRegistryMetaModel
import org.eclipse.xtend.check.CheckComponent
import org.eclipse.xpand2.Generator
import org.eclipse.xpand2.output.JavaBeautifier
import org.eclipse.xtend.expression.ResourceManagerDefaultImpl

var modelChat  = "platform:/resource/enriched2text/src/models/EnrichedChatServer.xmi"
var modelDiner = "platform:/resource/enriched2text/src/models/EnrichedMakeDiner.xmi"
var modelQueue = "platform:/resource/enriched2text/src/models/EnrichedQueue.xmi"
var mergeSort = "platform:/resource/enriched2text/src/models/EnrichedMergeSort.xmi"
var dirSrcGenChat = "src-gen/chatServer"
var dirSrcGenDiner = "src-gen/makeDinerThread"
var dirSrcGenQueue = "src-gen/queueExample"
var dirSrcGenMerge = "src-gen/mergeSort"

Workflow {
	/* set up EMF for standalone execution */
	bean = StandaloneSetup { platformUri="." }

	/** instantiate metamodel */
	bean = EmfRegistryMetaModel : mm_emf { }

	bean = JavaBeautifier : formatter_java { }

	/* load model and store it in slot 'model' */
	component = Reader {
		uri = modelChat
		modelSlot = "model"
	}

	/* check model */
/* 	component = CheckComponent {
		metaModel = mm_emf
		checkFile = "metamodel::Checks"
		emfAllChildrenSlot = "model"
	}
*/
	/** Clear output directory */
	component = DirectoryCleaner {
		directory = dirSrcGenChat
	}

	/* generate code */
	component = Generator {
		metaModel = mm_emf
		expand = "template::Template::main FOR model"
		outlet = {
			path = dirSrcGenChat
			postprocessor = formatter_java
			fileEncoding = "ISO-8859-1" // this is the encoding for files written the outlet
		}
		// configure Xpand resource encoding (check project resource setting)
		resourceManager = ResourceManagerDefaultImpl {
			fileEncoding = "ISO-8859-1"
		}
	}
	
	
	/* load model and store it in slot 'model' */
	component = Reader {
		uri = modelDiner
		modelSlot = "model"
	}

	/* check model */
/* 	component = CheckComponent {
		metaModel = mm_emf
		checkFile = "metamodel::Checks"
		emfAllChildrenSlot = "model"
	}
*/
	/** Clear output directory */
	component = DirectoryCleaner {
		directory = dirSrcGenDiner
	}

	/* generate code */
	component = Generator {
		metaModel = mm_emf
		expand = "template::Template::main FOR model"
		outlet = {
			path = dirSrcGenDiner
			postprocessor = formatter_java
			fileEncoding = "ISO-8859-1" // this is the encoding for files written the outlet
		}
		// configure Xpand resource encoding (check project resource setting)
		resourceManager = ResourceManagerDefaultImpl {
			fileEncoding = "ISO-8859-1"
		}
	}
	
	
	/* load model and store it in slot 'model' */
	component = Reader {
		uri = modelQueue
		modelSlot = "model"
	}

	/* check model */
/* 	component = CheckComponent {
		metaModel = mm_emf
		checkFile = "metamodel::Checks"
		emfAllChildrenSlot = "model"
	}
*/
	/** Clear output directory */
	component = DirectoryCleaner {
		directory = dirSrcGenQueue
	}

	/* generate code */
	component = Generator {
		metaModel = mm_emf
		expand = "template::Template::main FOR model"
		outlet = {
			path = dirSrcGenQueue
			postprocessor = formatter_java
			fileEncoding = "ISO-8859-1" // this is the encoding for files written the outlet
		}
		// configure Xpand resource encoding (check project resource setting)
		resourceManager = ResourceManagerDefaultImpl {
			fileEncoding = "ISO-8859-1"
		}
	}
	
	/* load model and store it in slot 'model' */
	component = Reader {
		uri = mergeSort
		modelSlot = "model"
	}

	/* check model */
/* 	component = CheckComponent {
		metaModel = mm_emf
		checkFile = "metamodel::Checks"
		emfAllChildrenSlot = "model"
	}
*/
	/** Clear output directory */
	component = DirectoryCleaner {
		directory = dirSrcGenMerge
	}

	/* generate code */
	component = Generator {
		metaModel = mm_emf
		expand = "template::Template::main FOR model"
		outlet = {
			path = dirSrcGenMerge
			postprocessor = formatter_java
			fileEncoding = "ISO-8859-1" // this is the encoding for files written the outlet
		}
		// configure Xpand resource encoding (check project resource setting)
		resourceManager = ResourceManagerDefaultImpl {
			fileEncoding = "ISO-8859-1"
		}
	}
}