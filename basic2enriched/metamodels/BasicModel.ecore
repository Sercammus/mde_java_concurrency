<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="BasicModel" nsURI="www.example.org/basicModel" nsPrefix="ad">
  <eAnnotations source="http://www.eclipse.org/OCL/Import">
    <details key="ecore" value="http://www.eclipse.org/emf/2002/Ecore"/>
  </eAnnotations>
  <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
    <details key="invocationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
    <details key="settingDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
    <details key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
  </eAnnotations>
  <eClassifiers xsi:type="ecore:EClass" name="Thread" abstract="true" eSuperTypes="#//Reference">
    <eOperations name="GetSiblingThreads" ordered="false" upperBound="-1" eType="#//Thread">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="if GetStartActivity().thread = self&#xA;&#x9;&#x9;&#x9;      then GetStartActivity().GetSiblingThreads()&#xA;&#x9;&#x9;&#x9;      else let forks : Set(Fork) = Fork.allInstances()->select(e | e.forkedThreads->includes(self)) in&#xA;&#x9;&#x9;&#x9;               forks->collect(e | e.forkedThreads->union(e.GetSiblingThreads()))->asSet()&#xA;&#x9;&#x9;&#x9;      endif"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="GetProvidedReferences" ordered="false" upperBound="-1" eType="#//Reference">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="activities->collect(e | e.GetProvidedReferences())->asSet()"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="GetChildThreads" ordered="false" upperBound="-1" eType="#//Thread">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="GetStartActivity().GetChildThreads(Set{self}, Set{})"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="GetParentThreads" ordered="false" upperBound="-1" eType="#//Thread">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="Thread.allInstances()->select(t | t.GetChildThreads()->includes(self))->asSet()"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="IsInterrupted" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="GetParentThreads()->intersection(Interrupt.allInstances()->collect(i | i.interruptedThread)->asSet())->notEmpty()"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="GetStartActivity" eType="#//Activity">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="if startActivity.oclIsUndefined() then Activity.allInstances()->asSequence()->first() else startActivity endif"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="siblingThreads" ordered="false"
        upperBound="-1" eType="#//Thread" volatile="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="derivation" value="GetSiblingThreads()"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="providedReferences" ordered="false"
        upperBound="-1" eType="#//Reference" volatile="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="derivation" value="GetProvidedReferences()"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parentThreads" ordered="false"
        upperBound="-1" eType="#//Thread" volatile="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="derivation" value="GetParentThreads()->excluding(self)"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="childThreads" ordered="false"
        upperBound="-1" eType="#//Thread" volatile="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="derivation" value="GetChildThreads()->excluding(self)"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="interruptedChildThreads"
        ordered="false" upperBound="-1" eType="#//Thread" volatile="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="derivation" value="GetChildThreads()->excluding(self)->select(t | t.oclIsKindOf(InterruptableThread))"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isInterrupted" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
        volatile="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="derivation" value="IsInterrupted()"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="activities" upperBound="-1"
        eType="#//Activity" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="startActivity" lowerBound="1"
        eType="#//Activity"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BasicModel" eSuperTypes="#//InterruptableThread">
    <eStructuralFeatures xsi:type="ecore:EReference" name="resources" upperBound="-1"
        eType="#//SharedResource" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="instances" upperBound="-1"
        eType="#//Instance" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="instanceTypes" upperBound="-1"
        eType="#//InstanceType" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="nestedThreads" upperBound="-1"
        eType="#//NestedThread" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Activity" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="ActivityIsReachable"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="ActivityIsReachable" value="let basicModel: BasicModel = BasicModel.allInstances()->asSequence()->first() in&#xA;&#x9;                             let reachableActivities: Set(Activity) = basicModel.GetStartActivity().GetReachableActivities(Set{}) in&#xA;&#x9;                                 reachableActivities->exists(a | a = self)"/>
    </eAnnotations>
    <eOperations name="UsesDifferentThread" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="(thread &lt;> a.thread) or a.oclIsTypeOf(Join) or a.oclIsKindOf(End)"/>
      </eAnnotations>
      <eParameters name="a" eType="#//Activity"/>
    </eOperations>
    <eOperations name="UsesSameThread" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="(thread = a.thread) or a.oclIsTypeOf(Join) or a.oclIsKindOf(End)"/>
      </eAnnotations>
      <eParameters name="a" eType="#//Activity"/>
    </eOperations>
    <eOperations name="GetNextActivities" ordered="false" upperBound="-1" eType="#//Activity">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="Set{}"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="GetChildThreads" ordered="false" upperBound="-1" eType="#//Thread">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="if beenHere->includes(self)&#xA;&#x9;&#x9;&#x9;&#x9;      then soFar&#xA;&#x9;&#x9;&#x9;&#x9;      else let sf: Set(Thread) = soFar->including(self.thread) in&#xA;&#x9;&#x9;&#x9;&#x9;           let bh: Set(Activity) = beenHere->including(self) in&#xA;&#x9;&#x9;&#x9;&#x9;               GetNextActivities()->collect(a | a.GetChildThreads(sf, bh))->asSet()&#xA;&#x9;&#x9;&#x9;&#x9;      endif"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
      <eParameters name="soFar" ordered="false" upperBound="-1" eType="#//Thread">
        <eAnnotations source="http://www.eclipse.org/OCL/Collection">
          <details key="nullFree" value="false"/>
        </eAnnotations>
      </eParameters>
      <eParameters name="beenHere" ordered="false" upperBound="-1" eType="#//Activity">
        <eAnnotations source="http://www.eclipse.org/OCL/Collection">
          <details key="nullFree" value="false"/>
        </eAnnotations>
      </eParameters>
    </eOperations>
    <eOperations name="GetSiblingThreads" ordered="false" upperBound="-1" eType="#//Thread">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="GetRootThread().GetStartActivity().GetSiblingThreads(self, Set{}, Set{})"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="GetSiblingThreads" ordered="false" upperBound="-1" eType="#//Thread">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="if beenHere->includes(self)&#xA;&#x9;&#x9;&#x9;      then Set{}&#xA;&#x9;&#x9;&#x9;      else if target = self&#xA;                       then soFar&#xA;&#x9;&#x9;               else GetNextActivities()->iterate(a; result: Set(Thread) = Set{} |&#xA;&#x9;&#x9;                    if result->isEmpty()&#xA;&#x9;&#x9;                    then a.GetSiblingThreads(target, soFar, beenHere->including(self))&#xA;&#x9;&#x9;                    else result&#xA;&#x9;&#x9;                    endif)&#xA;&#x9;&#x9;&#x9;           endif&#xA;&#x9;&#x9;&#x9;      endif"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
      <eParameters name="target" eType="#//Activity"/>
      <eParameters name="soFar" ordered="false" upperBound="-1" eType="#//Thread">
        <eAnnotations source="http://www.eclipse.org/OCL/Collection">
          <details key="nullFree" value="false"/>
        </eAnnotations>
      </eParameters>
      <eParameters name="beenHere" ordered="false" upperBound="-1" eType="#//Activity">
        <eAnnotations source="http://www.eclipse.org/OCL/Collection">
          <details key="nullFree" value="false"/>
        </eAnnotations>
      </eParameters>
    </eOperations>
    <eOperations name="GetUsedReferences" ordered="false" upperBound="-1" eType="#//Reference">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="Set{}"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="GetUsedResources" ordered="false" upperBound="-1" eType="#//SharedResource">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="GetUsedReferences()->select(e | e.oclIsTypeOf(SharedResource))->collect(e | e.oclAsType(SharedResource))->asSet()"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="GetProvidedReferences" ordered="false" upperBound="-1" eType="#//Reference">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="Set{}"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="GetReferencesToNextActivities" ordered="false" upperBound="-1"
        eType="#//Reference">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="GetNextActivities()->iterate(e, result : Set(Reference) = Set{} | if e.instance &lt;> null and e.instance &lt;> instance then result->including(e.instance) else result endif)"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="GetFutureReferences" ordered="false" upperBound="-1" eType="#//Reference">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="if beenHere->includes(self) -- Activity has already been checked&#xA;&#x9;&#x9;&#x9;      then soFar&#xA;&#x9;&#x9;&#x9;      else let bh : Set(Activity) = beenHere->including(self) in&#xA;&#x9;&#x9;&#x9;           let sf : Set(Reference) = soFar->union(GetUsedReferences()->union(GetLockedResources(GetUsedResources()))->union(GetReferencesToNextActivities())) in&#xA;&#x9;&#x9;&#x9;           let ar : Set(Reference) = GetNextActivities()->iterate(e, result : Set(Reference) = sf | result->union(e.GetFutureReferences(sf, bh)))->asSet() - GetProvidedReferences() in&#xA;&#x9;&#x9;&#x9;               if instance &lt;> null&#xA;&#x9;&#x9;&#x9;               then ar->excluding(instance)&#xA;&#x9;&#x9;&#x9;               else ar&#xA;&#x9;&#x9;&#x9;               endif&#xA;&#x9;&#x9;&#x9;      endif"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
      <eParameters name="soFar" ordered="false" upperBound="-1" eType="#//Reference">
        <eAnnotations source="http://www.eclipse.org/OCL/Collection">
          <details key="nullFree" value="false"/>
        </eAnnotations>
      </eParameters>
      <eParameters name="beenHere" ordered="false" upperBound="-1" eType="#//Activity">
        <eAnnotations source="http://www.eclipse.org/OCL/Collection">
          <details key="nullFree" value="false"/>
        </eAnnotations>
      </eParameters>
    </eOperations>
    <eOperations name="GetLockedResources" ordered="false" upperBound="-1" eType="#//SharedResource">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="let sf: Set(SharedResource) = Activity.allInstances()->iterate(e; result: Set(SharedResource) = soFar |&#xA;&#x9;&#x9;&#x9;&#x9;      let ur: Set(SharedResource) = e.GetUsedResources() in&#xA;&#x9;&#x9;&#x9;&#x9;      let is: Set(SharedResource) = result->intersection(ur) in&#xA;&#x9;&#x9;&#x9;&#x9;          if is->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;          then result->union(ur)&#xA;&#x9;&#x9;&#x9;&#x9;          else result&#xA;&#x9;&#x9;&#x9;&#x9;          endif) in&#xA;&#x9;&#x9;&#x9;&#x9;      if sf &lt;> soFar&#xA;&#x9;&#x9;&#x9;&#x9;      then GetLockedResources(sf)&#xA;&#x9;&#x9;&#x9;&#x9;      else soFar&#xA;&#x9;&#x9;&#x9;&#x9;      endif"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
      <eParameters name="soFar" ordered="false" upperBound="-1" eType="#//SharedResource">
        <eAnnotations source="http://www.eclipse.org/OCL/Collection">
          <details key="nullFree" value="false"/>
        </eAnnotations>
      </eParameters>
    </eOperations>
    <eOperations name="GetReachableActivities" ordered="false" upperBound="-1" eType="#//Activity">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="if soFar->includes(self) -- Activity has already been checked&#xA;&#x9;&#x9;&#x9;      then soFar&#xA;&#x9;&#x9;&#x9;      else GetNextActivities()->iterate(a; result: Set(Activity) = soFar->including(self) | a.GetReachableActivities(result))&#xA;&#x9;&#x9;&#x9;      endif"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
      <eParameters name="soFar" ordered="false" upperBound="-1" eType="#//Activity">
        <eAnnotations source="http://www.eclipse.org/OCL/Collection">
          <details key="nullFree" value="false"/>
        </eAnnotations>
      </eParameters>
    </eOperations>
    <eOperations name="GetReachableForks" ordered="false" upperBound="-1" eType="#//Fork">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="if beenHere->includes(self) -- Activity has already been checked&#xA;&#x9;&#x9;&#x9;      then soFar&#xA;&#x9;&#x9;&#x9;      else if self.oclIsTypeOf(Fork)&#xA;&#x9;&#x9;&#x9;           then soFar->including(self.oclAsType(Fork))&#xA;&#x9;&#x9;&#x9;           else let bh: Set(Activity) = beenHere->including(self) in&#xA;&#x9;&#x9;&#x9;                    GetNextActivities()->iterate(a; result: Set(Fork) = soFar | a.GetReachableForks(result, bh))->asSet()&#xA;&#x9;&#x9;&#x9;           endif&#xA;&#x9;&#x9;&#x9;      endif"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
      <eParameters name="soFar" ordered="false" upperBound="-1" eType="#//Fork">
        <eAnnotations source="http://www.eclipse.org/OCL/Collection">
          <details key="nullFree" value="false"/>
        </eAnnotations>
      </eParameters>
      <eParameters name="beenHere" ordered="false" upperBound="-1" eType="#//Activity">
        <eAnnotations source="http://www.eclipse.org/OCL/Collection">
          <details key="nullFree" value="false"/>
        </eAnnotations>
      </eParameters>
    </eOperations>
    <eOperations name="IsVisitedOnce" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="if beenHere->includes(self)&#xA;&#x9;&#x9;&#x9;      then null&#xA;&#x9;&#x9;&#x9;&#x9;  else let vo: Boolean = visitedOnce and CanReachItselfViaFork() in&#xA;&#x9;&#x9;&#x9;&#x9;           if target = self&#xA;&#x9;&#x9;&#x9;&#x9;           then vo&#xA;&#x9;&#x9;&#x9;&#x9;           else let bh: Set(Activity) = beenHere->including(self) in&#xA;&#x9;&#x9;&#x9;                        GetNextActivities()->iterate(a; result: Boolean[?] = null | if result = null then a.IsVisitedOnce(vo, target, bh) else result endif)&#xA;&#x9;&#x9;&#x9;               endif&#xA;&#x9;&#x9;&#x9;&#x9;  endif"/>
      </eAnnotations>
      <eParameters name="visitedOnce" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="target" eType="#//Activity"/>
      <eParameters name="beenHere" ordered="false" upperBound="-1" eType="#//Activity">
        <eAnnotations source="http://www.eclipse.org/OCL/Collection">
          <details key="nullFree" value="false"/>
        </eAnnotations>
      </eParameters>
    </eOperations>
    <eOperations name="CanReachItselfViaFork" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="let rf: Set(Fork) = GetReachableForks(Set{}, Set{}) in&#xA;&#x9;&#x9;&#x9;&#x9;          rf->collect(f | f.forkedThreads)->collect(t | t.GetStartActivity())->iterate(a; result: Set(Activity) = Set{} | a.GetReachableActivities(result))->excludes(self)"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="IsVisitedOnce" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="let basicModel: BasicModel = BasicModel.allInstances()->asSequence()->first() in&#xA;&#x9;&#x9;&#x9;          basicModel.GetStartActivity().IsVisitedOnce(true, self, Set{})"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="GetThread" eType="#//Thread">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="let temp: Set(Thread) = Thread.allInstances()->select(t | t.activities->exists(a | a = self)) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;          if temp->size() = 1 then temp->asOrderedSet()->first() else null endif"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="GetRootThread" eType="#//Thread">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="if thread.oclIsTypeOf(BasicModel) or thread.oclIsTypeOf(NestedThread)&#xA;&#x9;&#x9;&#x9;      then thread&#xA;&#x9;&#x9;&#x9;      else let forks: Set(Fork) = Fork.allInstances()->select(f | f.forkedThreads->includes(thread)) in&#xA;&#x9;&#x9;&#x9;               if forks->notEmpty()&#xA;&#x9;&#x9;&#x9;               then forks->asOrderedSet()->first().GetRootThread()&#xA;&#x9;&#x9;&#x9;               else null&#xA;&#x9;&#x9;&#x9;               endif&#xA;&#x9;&#x9;&#x9;      endif"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isVisitedOnce" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
        volatile="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="derivation" value="IsVisitedOnce()"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="siblingThreads" ordered="false"
        upperBound="-1" eType="#//Thread" volatile="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="derivation" value="GetSiblingThreads()"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="instance" eType="#//Instance"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="instanceType" eType="#//InstanceType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="derivation" value="if instance &lt;> null then instance.instanceType else null endif"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="thread" eType="#//Thread"
        volatile="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="derivation" value="GetThread()"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="futureReferences" ordered="false"
        upperBound="-1" eType="#//Reference" volatile="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="derivation" value="GetFutureReferences(Set{}, Set{})"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="lockedResources" ordered="false"
        upperBound="-1" eType="#//SharedResource" volatile="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="derivation" value="GetLockedResources(GetUsedResources())"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="End" eSuperTypes="#//FinalActivity"/>
  <eClassifiers xsi:type="ecore:EClass" name="FinalActivity" abstract="true" eSuperTypes="#//Activity"/>
  <eClassifiers xsi:type="ecore:EClass" name="LinearActivity" abstract="true" eSuperTypes="#//Activity">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="NextActivityBelongsToSameThread"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="NextActivityBelongsToSameThread" value="self.UsesSameThread(nextActivity)"/>
    </eAnnotations>
    <eOperations name="GetNextActivities" ordered="false" upperBound="-1" eType="#//Activity">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="Set{nextActivity}"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="nextActivity" lowerBound="1"
        eType="#//Activity"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Fork" eSuperTypes="#//Activity">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="NonNegativeMaxThreadCount ForkedThreadConsistency"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="NonNegativeMaxThreadCount" value="maxThreadCount >= 0"/>
      <details key="ForkedThreadConsistency" value="let availableRefs: Set(Reference) = GetFutureReferences(Set{}, Set{})->union(self.GetProvidedReferences()) in&#xA;&#x9;&#x9;&#x9;&#x9;                                       forkedThreads->forAll(t | availableRefs->includesAll(t.startActivity.GetFutureReferences(Set{}, Set{})))"/>
    </eAnnotations>
    <eOperations name="GetProvidedReferences" ordered="false" upperBound="-1" eType="#//Reference">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="forkedThreads->asSet()"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="GetSiblingThreads" ordered="false" upperBound="-1" eType="#//Thread">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="if beenHere->includes(self)&#xA;&#x9;&#x9;&#x9;&#x9;      then Set{}&#xA;&#x9;&#x9;&#x9;&#x9;      else if target = self&#xA;&#x9;                       then soFar&#xA;&#x9;&#x9;&#x9;               else let sf: Set(Thread) = soFar->union(forkedThreads->asSet()) in&#xA;&#x9;&#x9;&#x9;                        GetNextActivities()->iterate(a; result: Set(Thread) = Set{} |&#xA;&#x9;&#x9;&#x9;                            if result->isEmpty()&#xA;&#x9;&#x9;&#x9;                            then a.GetSiblingThreads(target, sf, beenHere->including(self))&#xA;&#x9;&#x9;&#x9;                            else result&#xA;&#x9;&#x9;&#x9;                            endif)&#xA;&#x9;&#x9;&#x9;&#x9;           endif&#xA;&#x9;&#x9;&#x9;&#x9;      endif"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
      <eParameters name="target" eType="#//Activity"/>
      <eParameters name="soFar" ordered="false" upperBound="-1" eType="#//Thread">
        <eAnnotations source="http://www.eclipse.org/OCL/Collection">
          <details key="nullFree" value="false"/>
        </eAnnotations>
      </eParameters>
      <eParameters name="beenHere" ordered="false" upperBound="-1" eType="#//Activity">
        <eAnnotations source="http://www.eclipse.org/OCL/Collection">
          <details key="nullFree" value="false"/>
        </eAnnotations>
      </eParameters>
    </eOperations>
    <eOperations name="GetNextActivities" ordered="false" upperBound="-1" eType="#//Activity">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="forkedThreads->collect(t | t.GetStartActivity())->asSet()"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="GetForkedThreadsUsingThreadInit" ordered="false" upperBound="-1"
        eType="#//ForkedThread">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="let ft1: Set(ForkedThread) = forkedThreads->select(t | self.UsesDifferentThread(t.GetStartActivity()))->asSet() in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;      let ft2: OrderedSet(ForkedThread) = forkedThreads->select(t | not self.UsesDifferentThread(t.GetStartActivity())) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;          if ft2->isEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;          then ft1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;          else ft1->union(ft2->excluding(ft2->first())->asSet())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;          endif"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="GetForkedThreadsUsingJump" ordered="false" upperBound="-1"
        eType="#//ForkedThread">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="let ft: OrderedSet(ForkedThread) = forkedThreads->select(t | not self.UsesDifferentThread(t.GetStartActivity())) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;          if ft->isEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;          then Set{}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;          else Set{ft->first()}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;          endif"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="adoptedForkedThread" eType="#//ForkedThread"
        volatile="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="derivation" value="let tuj: Set(ForkedThread) = GetForkedThreadsUsingJump() in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;             if tuj->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;             then tuj->asOrderedSet()->first()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;             else let tui: Set(ForkedThread) = GetForkedThreadsUsingThreadInit() in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;                      if tui->notEmpty() and IsVisitedOnce()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;                      then tui->asOrderedSet()->first()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;                      else null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;                      endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;             endif"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="maxThreadCount" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBigInteger"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="forkedThreads" lowerBound="1"
        upperBound="-1" eType="#//ForkedThread" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="forkedThreadsUsingThreadInit"
        ordered="false" upperBound="-1" eType="#//ForkedThread" volatile="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="derivation" value="GetForkedThreadsUsingThreadInit()"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="forkedThreadsUsingJump"
        ordered="false" upperBound="-1" eType="#//ForkedThread" volatile="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="derivation" value="GetForkedThreadsUsingJump()"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Decision" eSuperTypes="#//LinearActivity">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="NextActivityBelongsToSameThread"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="NextActivityBelongsToSameThread" value="branches->forAll(b | self.UsesSameThread(b.nextActivity))"/>
    </eAnnotations>
    <eOperations name="GetNextActivities" ordered="false" upperBound="-1" eType="#//Activity">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="branches->collect(b | b.nextActivity)->asSet()->including(nextActivity)"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="branches" upperBound="-1"
        eType="#//Branch" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Branch">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="ValidBranchCondition"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="ValidBranchCondition" value="true"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="nextActivity" lowerBound="1"
        eType="#//Activity"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="condition" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Join" eSuperTypes="#//Activity">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="JoinLocatedInIncomingThread IncomingThreadsAreAllSiblingThreads JoinGoesToSameThreadHierarchy"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="JoinLocatedInIncomingThread" value="GetIncomingThreads()->includes(thread)"/>
      <details key="IncomingThreadsAreAllSiblingThreads" value="GetSiblingThreads()->includesAll(GetIncomingThreads())"/>
      <details key="JoinGoesToSameThreadHierarchy" value="GetRootThread() = nextActivity.GetRootThread()"/>
    </eAnnotations>
    <eOperations name="GetUsedReferences" ordered="false" upperBound="-1" eType="#//Reference">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="GetIncomingThreads()->excluding(thread)"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="GetSiblingThreads" ordered="false" upperBound="-1" eType="#//Thread">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="if beenHere->includes(self)&#xA;&#x9;&#x9;&#x9;&#x9;      then Set{}&#xA;&#x9;&#x9;&#x9;&#x9;      else let sf: Set(Thread) = soFar - GetThreadsInaccessibleAfterThisJoin() in&#xA;&#x9;&#x9;&#x9;&#x9;               if target = self&#xA;&#x9;                           then sf&#xA;&#x9;&#x9;&#x9;                   else GetNextActivities()->iterate(a; result: Set(Thread) = Set{} |&#xA;&#x9;&#x9;&#x9;                            if result->isEmpty()&#xA;&#x9;&#x9;&#x9;                            then a.GetSiblingThreads(target, sf, beenHere->including(self))&#xA;&#x9;&#x9;&#x9;                            else result&#xA;&#x9;&#x9;&#x9;                            endif)&#xA;&#x9;&#x9;&#x9;&#x9;           endif&#xA;&#x9;&#x9;&#x9;&#x9;      endif"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
      <eParameters name="target" eType="#//Activity"/>
      <eParameters name="soFar" ordered="false" upperBound="-1" eType="#//Thread">
        <eAnnotations source="http://www.eclipse.org/OCL/Collection">
          <details key="nullFree" value="false"/>
        </eAnnotations>
      </eParameters>
      <eParameters name="beenHere" ordered="false" upperBound="-1" eType="#//Activity">
        <eAnnotations source="http://www.eclipse.org/OCL/Collection">
          <details key="nullFree" value="false"/>
        </eAnnotations>
      </eParameters>
    </eOperations>
    <eOperations name="GetThreadsInaccessibleAfterThisJoin" ordered="false" upperBound="-1"
        eType="#//Thread">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="let incoming: Set(Thread) = GetIncomingThreads() in&#xA;&#x9;&#x9;&#x9;&#x9;      let forks: Set(Fork) = Fork.allInstances()->select(f | f.forkedThreads->intersection(incoming)->notEmpty()) in&#xA;&#x9;&#x9;&#x9;&#x9;          forks->collect(f | f.forkedThreads)->asSet()"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="GetIncomingThreads" ordered="false" upperBound="-1" eType="#//Thread">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="let incomingActivities: Set(Activity) = Activity.allInstances()->select(a | a.GetNextActivities()->exists(e | e = self)) in&#xA;&#x9;&#x9;&#x9;&#x9;          incomingActivities->collect(a | a.thread)->asSet()"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="UpdateParentThreads" unique="false" upperBound="-1" eType="#//Thread">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="let r: Sequence(Thread) = parentThreads->subSequence(1, parentThreads->size() - 1) in&#xA;&#x9;&#x9;&#x9;&#x9;             if r->last() &lt;> thread then r->append(thread) else r endif"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
      <eParameters name="parentThreads" unique="false" upperBound="-1" eType="#//Thread">
        <eAnnotations source="http://www.eclipse.org/OCL/Collection">
          <details key="nullFree" value="false"/>
        </eAnnotations>
      </eParameters>
    </eOperations>
    <eOperations name="GetNextActivities" ordered="false" upperBound="-1" eType="#//Activity">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="Set{nextActivity}"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="incomingThreads" ordered="false"
        upperBound="-1" eType="#//Thread">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="derivation" value="GetIncomingThreads()->excluding(thread)"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="nextActivity" lowerBound="1"
        eType="#//Activity"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="SharedResource" eSuperTypes="#//Reference"/>
  <eClassifiers xsi:type="ecore:EClass" name="Interrupt" eSuperTypes="#//LinearActivity">
    <eOperations name="GetUsedReferences" ordered="false" upperBound="-1" eType="#//Reference">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="Set{interruptedThread}"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="interruptedThread" lowerBound="1"
        eType="#//InterruptableThread"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Instance" eSuperTypes="#//Reference">
    <eStructuralFeatures xsi:type="ecore:EReference" name="instanceType" lowerBound="1"
        eType="#//InstanceType"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="InstanceType">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Sleep" eSuperTypes="#//LinearActivity">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="PositiveSleepDuration"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="PositiveSleepDuration" value="duration >= 1"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="duration" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBigInteger"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Yield" eSuperTypes="#//LinearActivity"/>
  <eClassifiers xsi:type="ecore:EClass" name="SimpleActivity" eSuperTypes="#//LinearActivity">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="ActivityNameIsValid ActivityNameIsNotReserved UniqueNamedActivityName"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="ActivityNameIsValid" value="name.matches('[a-z_][A-Za-z0-9_]*')"/>
      <details key="ActivityNameIsNotReserved" value="not Reference.allInstances()->asSequence()->first().IsReservedWord(activityName)"/>
      <details key="UniqueNamedActivityName" value="Reference.allInstances()->select(r | r.name = activityName and not r.oclIsKindOf(NestedThread))->isEmpty()"/>
    </eAnnotations>
    <eOperations name="GetUsedReferences" ordered="false" upperBound="-1" eType="#//Reference">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="SimpleActivity.allInstances()->select(e | e.activityName = activityName and e.instanceType = instanceType)->collect(e | e.sharedResources)->asSet()"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="activityName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="sharedResources" ordered="false"
        upperBound="-1" eType="#//SharedResource"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NestedActivity" eSuperTypes="#//LinearActivity">
    <eOperations name="GetSiblingThreads" ordered="false" upperBound="-1" eType="#//Thread">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="if beenHere->includes(self)&#xA;&#x9;&#x9;&#x9;&#x9;      then Set{}&#xA;&#x9;&#x9;&#x9;&#x9;      else if target = self&#xA;&#x9;&#x9;&#x9;&#x9;           then soFar&#xA;&#x9;&#x9;&#x9;&#x9;           else nextActivity.GetSiblingThreads(target, soFar, beenHere->including(self))&#xA;&#x9;&#x9;&#x9;&#x9;           endif&#xA;&#x9;&#x9;&#x9;&#x9;      endif"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
      <eParameters name="target" eType="#//Activity"/>
      <eParameters name="soFar" ordered="false" upperBound="-1" eType="#//Thread">
        <eAnnotations source="http://www.eclipse.org/OCL/Collection">
          <details key="nullFree" value="false"/>
        </eAnnotations>
      </eParameters>
      <eParameters name="beenHere" ordered="false" upperBound="-1" eType="#//Activity">
        <eAnnotations source="http://www.eclipse.org/OCL/Collection">
          <details key="nullFree" value="false"/>
        </eAnnotations>
      </eParameters>
    </eOperations>
    <eOperations name="GetUsedReferences" ordered="false" upperBound="-1" eType="#//Reference">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="nestedThread.sharedResources"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="GetNextActivities" ordered="false" upperBound="-1" eType="#//Activity">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="Set{nestedThread.GetStartActivity(), nextActivity}"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="nestedThread" lowerBound="1"
        eType="#//NestedThread"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ForkedThread" eSuperTypes="#//InterruptableThread">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="daemon" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Reference" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="ReferenceNameIsValid ReferenceNameIsNotReserved UniqueReferenceName"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="ReferenceNameIsValid" value="name.matches('[a-z_][A-Za-z0-9_]*')"/>
      <details key="ReferenceNameIsNotReserved" value="not IsReservedWord(name)"/>
      <details key="UniqueReferenceName" value="Reference.allInstances()->select(r | r.name = name and not r.oclIsKindOf(NestedThread))->size() &lt;= 1"/>
    </eAnnotations>
    <eOperations name="IsReservedWord" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="let javaKeywords: Set(String) = Set{&#xA;&#x9;&#x9;&#x9;&#x9;          'abstract', 'continue', 'for', 'new', 'switch', 'assert',&#xA;                          'default', 'goto', 'package', 'synchronized', 'boolean', 'do',&#xA;                          'if', 'private', 'this', 'break', 'double', 'implements',&#xA;                          'protected', 'throw', 'byte', 'else', 'import', 'public',&#xA;                          'throws', 'case', 'enum', 'instanceof', 'return', 'transient',&#xA;                          'catch', 'extends', 'int', 'short', 'try', 'char',&#xA;                          'final', 'interface', 'static', 'void', 'class', 'finally',&#xA;                          'long', 'strictfp', 'volatile', 'const', 'float', 'native',&#xA;                          'super', 'while', 'Main', 'main'} in&#xA;                          javaKeywords->includes(word)"/>
      </eAnnotations>
      <eParameters name="word" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NestedThread" eSuperTypes="#//Thread">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="ActivityNameIsValid ActivityNameIsNotReserved UniqueNamedActivityName"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="ActivityNameIsValid" value="activityName.matches('[a-z_][A-Za-z0-9_]*')"/>
      <details key="ActivityNameIsNotReserved" value="not Reference.allInstances()->asSequence()->first().IsReservedWord(activityName)"/>
      <details key="UniqueNamedActivityName" value="Reference.allInstances()->select(r | r.name = activityName and not r.oclIsKindOf(NestedThread))->isEmpty()"/>
    </eAnnotations>
    <eOperations name="GetParentThreads" ordered="false" upperBound="-1" eType="#//Thread">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="NestedActivity.allInstances()->select(e | e.nestedThread = self)->collect(e | e.thread)->asSet()"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="GetFutureReferences" ordered="false" upperBound="-1" eType="#//Reference">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="GetStartActivity().futureReferences"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="GetLockedResources" ordered="false" upperBound="-1" eType="#//SharedResource">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="NestedActivity.allInstances()->select(e | e.nestedThread = self)->collect(e | e.GetLockedResources(e.GetUsedResources()))->asSet()"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="activityName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="futureReferences" ordered="false"
        upperBound="-1" eType="#//Reference" volatile="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="derivation" value="GetFutureReferences()"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="lockedResources" ordered="false"
        upperBound="-1" eType="#//SharedResource" volatile="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="derivation" value="GetLockedResources()"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/OCL/Collection">
        <details key="nullFree" value="false"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="sharedResources" ordered="false"
        upperBound="-1" eType="#//SharedResource"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="InterruptableThread" abstract="true"
      eSuperTypes="#//Thread"/>
</ecore:EPackage>
